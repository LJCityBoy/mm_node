define([], function() {
	"use strict";
	var form_mixin = {
		model: {
			prop: 'value',
			event: 'input'
		},
		props: {
			// 宽度
			width: {
				type: String,
				default: ''
			},
			height: {
				type: String,
				default: ''
			},
			// 类型
			type: {
				type: String,
				default: 'text'
			},
			// 选项
			options: {
				type: Array,
				default: function() {
					return []
				}
			},
			// 标题
			value: {
				type: [String, Number]
			},
			// 回调函数
			func: {
				type: Function,
				default: function(fun, param1, param2) {
					return null
				}
			},
			// 显示方式
			display: {
				type: String,
				default: "1"
			},
			// 显示隐藏
			show: {
				type: Boolean,
				default: false
			},
			// 标题
			title: {
				type: String,
				default: ""
			},
			// 图标
			icon: {
				type: String,
				default: ''
			},
			// 单位
			unit: {
				type: String,
				default: ''
			},
			// 描述
			desc: {
				type: String,
				default: ""
			},
			// 错误提示
			tip: {
				type: String,
				default: ""
			},
			// 最小值
			min: {
				type: Number,
				default: 0
			},
			// 最大值
			max: {
				type: Number,
				default: 0
			},
			// 最小长度
			min_length: {
				type: Number,
				default: 0
			},
			// 最大长度
			max_length: {
				type: Number,
				default: 65535
			},
			// 主键
			field: {
				type: String,
				default: "value"
			},
			// 标签
			type: {
				type: String,
				default: "text"
			},
			// 数量
			num: {
				type: Number,
				default: 1
			},
			// 文本
			text: {
				type: String,
				default: ""
			},
			disabled: {
				type: Boolean,
				default: false
			},
			// 链接
			url: {
				type: String,
				default: ""
			},
			// 允许访问的用户组
			user_group: {
				type: Array,
				default: function() {
					return []
				}
			},
			// 允许访问的管理组
			admin_group: {
				type: Array,
				default: function() {
					return []
				}
			},
			// 允许访问的用户级别需多少以上
			vip: {
				type: Number,
				default: 0
			},
			// 允许访问的管理级别需多少以上
			gm: {
				type: Number,
				default: 0
			},
			// 身份验证
			oauth: {
				type: Boolean,
				default: false
			}
		},
		data: function data() {
			return {
				// 显示方式
				dy: this.display,
				// 显示隐藏
				sw: this.show,
				// 加载中
				load: this.loading,
				// 列表
				oj: this.obj,
				// 数量
				nm: this.num,
				// 文本
				txt: this.text,
				// 值
				val: this.value,
				// 禁用
				dd: this.disabled
			};
		},
		methods: {
			/// 可更改其他属性，默认绑定回调函数
			/// fun: 函数名
			/// param1: 参数1
			/// param2: 参数2
			/// param3: 参数3
			run: function run(fun, param1, param2, param3) {
				if (this.func) {
					return this.func(param1, param2, param3);
				}

				return null;
			},
			// 删除
			/// query: 查询条件
			del: function del() {
				var query = {};
				query[this.field] = this.id;
				this.run('del', query);
			},
			// 修改
			/// query: 查询条件
			/// obj: 修改的对象
			set: function set(obj) {
				var query = {};
				query[this.field] = this.id;
				this.run('set', query, obj);
			}
		}
	};

	var mm_btn = {
		template: "<!-- \u6309\u94AE -->\n\t<button :class=\"'mm_btn' + te\" v-if=\"!url\" @click=\"click_down()\">\n\t\t<slot></slot>\n\t</button>\n\t<button type=\"button\" :class=\"'mm_btn' + te\" @click=\"openBrowser()\" v-else-if=\"url.indexOf('http:') === 0 || url.indexOf('https:') === 0\">\n\t\t<slot></slot>\n\t</button>\n\t<router-link :class=\"'mm_btn' + te\" :to=\"url\" v-else>\n\t\t<slot></slot>\n\t</router-link>",
		props: {
			url: {
				type: String,
				default: ""
			},
			type: {
				type: String,
				default: ""
			},
			func: {
				type: Function,
				default: function _default() {}
			}
		},
		data: function data() {
			return {
				te: ""
			};
		},

		methods: {
			openBrowser: function openBrowser() {
				if (window) {
					window.open(this.url);
				}
			},
			click_down: function click_down() {
				if (this.func) {
					this.func();
				}
			}
		},
		created: function created() {
			var t = this.type;
			if (t) {
				if (t.indexOf("_") == -1) {
					this.te = "_" + t;
				}
			}
		}
	};
	var mm_icon = {
		template: "<!-- \u56FE\u6807 -->\n\t<div class=\"mm_icon\" v-if=\"src.indexOf('<') !== -1\" v-html=\"src\"></div>\n\t<div class=\"mm_icon\" v-else-if=\"src\"><img :src=\"src\" mode=\"mode\" /></div>\n\t<div class=\"mm_icon\" v-else></div>",
		props: {
			src: {
				type: String,
				default: ""
			},
			height: {
				type: String,
				default: ""
			},
			auto: {
				type: String,
				default: ""
			}
		},
		data: function data() {
			var mode = "";
			if (this.auto) {
				mode = "widthFix";
			}
			return {
				mode: mode
			};
		}
	};
	var mm_loading = {
		template: "<div class=\"mm_loading\">\n\t\t<div class=\"load\">\n\t\t\t<slot>\n\t\t\t\t<img src=\"/img/loading.svg\" :style=\"'width:' + wh + ';height:' + ht\" v-if=\"display == 1\" />\n\t\t\t\t<div class=\"progress\" :style=\"'width:' + wh + ';height:' + ht\" v-else></div>\n\t\t\t</slot>\n\t\t</div>\n\t\t<div class=\"state\">{{ title }}<span class=\"value\" v-show=\"value\"> {{ value }}</span></div>\n\t</div>",
		props: {
			value: {
				type: Number,
				default: 0
			},
			title: {
				type: String,
				default: "加载中"
			},
			width: {
				type: String,
				default: ""
			},
			height: {
				type: String,
				default: ""
			},
			display: {
				type: String,
				default: "1"
			}
		},
		data: function data() {
			var wh = "";
			var ht = "";
			if (this.width) {
				wh = this.width;
			} else {
				if (this.display == "1") {
					wh = "1.5rem";
				} else if (this.display == "2") {
					wh = "100%";
				}
			}
			if (this.height) {
				wh = this.height;
			} else {
				if (this.display == "1") {
					ht = "1.5rem";
				} else if (this.display == "2") {
					ht = "4px";
				}
			}
			return {
				ht: ht,
				wh: wh
			};
		}
	};

	var mm_body = {
		template: "<!-- \u5757\u4E3B\u4F53 -->\n\t<div class=\"mm_body\"><slot></slot></div>"
	};
	var mm_col = {
		template: "<!-- \u683C\u5B50 -->\n\t<div :class=\"'mm_col' + this.wh\"><slot></slot></div>",
		props: {
			width: {
				type: String,
				default: ""
			}
		},
		data: function data() {
			return {
				wh: this.width
			};
		},
		created: function created() {
			if (this.wh) {
				if (this.wh.indexOf("_") == -1) {
					this.wh = "_" + this.wh;
				}
			}
		}
	};
	var mm_foot = {
		template: "<!-- \u5757\u5C3E -->\n\t<div class=\"mm_foot\"><slot></slot></div>"
	};
	var mm_grid = {
		template: "<!-- \u6805\u683C -->\n\t<div :class=\"'mm_grid' + cl\">\n\t\t<slot></slot>\n\t</div>",
		props: {
			col: {
				type: String,
				default: ""
			}
		},
		computed: {
			cl: function cl() {
				var cl = this.col;
				if (cl && cl.indexOf("_") == -1) {
					cl = "_" + cl;
				}
				return cl;
			}
		}
	};
	var mm_group = {
		template: "<!-- \u7EC4\u5408\u6846 -->\n\t<div class=\"mm_group\"><slot></slot></div>"
	};
	var mm_head = {
		template: "<!-- \u5757\u5934 -->\n\t<div class=\"mm_head\"><slot></slot></div>"
	};
	var mm_item = {
		template: "<!-- \u9879\u76EE\u5757 -->\n\t<div class=\"mm_item\" v-if=\"!url\">\n\t\t<slot></slot>\n\t</div>\n\t<div class=\"mm_item\" @click=\"openBrowser()\" v-else-if=\"url.indexOf('http:') === 0 || url.indexOf('https:') === 0\">\n\t\t<slot></slot>\n\t</div>\n\t<router-link class=\"mm_item\" :to=\"url\" v-else>\n\t\t<slot></slot>\n\t</router-link>",
		props: {
			url: {
				type: String,
				default: ""
			}
		},
		data: function data() {
			return {
				type: ""
			};
		},

		methods: {
			openBrowser: function openBrowser() {
				if (window) {
					window.open(this.url);
				}
			}
		}
	};
	var mm_list = {
		template: "<!-- \u5217\u8868 -->\n\t<div :class=\"'mm_list' + cl\">\n\t\t<slot></slot>\n\t</div>",
		props: {
			col: {
				type: String,
				default: ""
			}
		},
		computed: {
			cl: function cl() {
				var cl = this.col;
				if (cl && cl.indexOf("_") == -1) {
					cl = "_" + cl;
				}
				return cl;
			}
		}
	};
	var mm_modal = {
		template: "<!-- \u6A21\u6001\u7A97 -->\n\t<div class=\"mm_modal\" v-bind:class=\"{ 'show' : show }\">\n\t\t<div v-bind:class=\"'from_' + display\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t\t<!-- \u906E\u7F69 -->\n\t\t<div class=\"mask\" v-if=\"mask && mask != 'false'\" @click=\"close()\"></div>\n\t</div>",
		props: {
			display: {
				type: String,
				default: ""
			},
			show: {
				type: Boolean,
				default: false
			},
			mask: {
				type: String,
				default: ""
			}
		},
		model: {
			prop: "show",
			event: "input"
		},
		methods: {
			close: function close() {
				this.$emit("input", false);
			}
		}
	};
	var mm_movable = {
		template: "<!-- \u62D6\u52A8\u5BB9\u5668 -->\n\t<div class=\"mm_movable\">\n\t\t<slot></slot>\n\t</div>"
	};
	var mm_page = {
		template: "<!-- \u9875\u9762 -->\n\t<div class=\"mm_page\">\n\t\t<slot></slot>\n\t</div>",
		props: {
			fun: {
				type: Function,
				default: function _default() {}
			}
		}
	};
	var mm_div = {
		template: "<!-- \u5757 -->\n\t<div class=\"mm_div\" v-if=\"!url\">\n\t\t<slot></slot>\n\t</div>\n\t<div class=\"mm_div\" @click=\"openBrowser()\" v-else-if=\"url.indexOf('http:') === 0 || url.indexOf('https:') === 0\">\n\t\t<slot></slot>\n\t</div>\n\t<router-link class=\"mm_div\" :to=\"url\" v-else>\n\t\t<slot></slot>\n\t</router-link>",
		props: {
			url: {
				type: String,
				default: ""
			}
		},
		data: function data() {
			return {
				type: ""
			};
		},

		methods: {
			openBrowser: function openBrowser() {
				if (window) {
					window.open(this.url);
				}
			}
		}
	};

	function bindResize(tag, target, func) {
		var width_init = $(target).width();
		var el = $(tag);
		var x = 0;
		var y = 0;
		el.mousedown(function(e) {
			x = e.clientX - el.offset().left;
			el.setCapture ? (el.setCapture(), el.onmousemove = function(ev) {
				mouseMove(ev || event);
			}, el.onmouseup = mouseUp) : $(document).bind("mousemove", mouseMove).bind("mouseup", mouseUp);
			e.preventDefault();
		});

		function mouseMove(e) {
			var width = e.clientX - x;
			if (width >= width_init) {
				$(target).width(width + "px");
				if (func) {
					func(width);
				}
			}
		}

		function mouseUp() {
			el.releaseCapture ? (el.releaseCapture(), el.onmousemove = el.onmouseup = null) : $(document).unbind("mousemove",
				mouseMove).unbind("mouseup", mouseUp);
		}
	}
	var mm_side = {
		template: "<div class=\"mm_side\" :id=\"side_id\">\n\t\t<slot></slot>\n\t\t<div class=\"line\"></div>\n\t</div>",
		props: {
			id: {
				type: String,
				default: ""
			},
			func: {
				type: Function,
				default: function _default(width) {}
			}
		},
		data: function data() {
			var id = this.id;
			if (!id) {
				id = "mm_side" + parseInt(Math.random() * 1000 + 1, 10);
			}
			return {
				side_id: id
			};
		},
		mounted: function mounted() {
			var target = "#" + this.id;
			bindResize(target + " .line", target, this.func);
		}
	};
	var mm_table = {
		template: "<table :class=\"'mm_table' + te\">\n\t\t<slot></slot>\n\t</table>",
		props: {
			type: {
				type: String,
				default: ""
			}
		},
		data: function data() {
			return {
				te: ""
			};
		},
		created: function created() {
			var t = this.type;
			if (t) {
				if (t.indexOf("_") == -1) {
					this.te = "_" + t;
				}
			}
		}
	};
	var mm_warp = {
		template: "<!-- \u9875\u5916\u5957 -->\n\t<div class=\"mm_warp\"><slot></slot></div>"
	};
	var mm_checkbox = {
		template: "<!-- \u590D\u9009\u6846 -->\n\t<div class=\"mm_checkbox\">\n\t\t<div class=\"title\" v-if=\"title\" v-html=\"title\"></div>\n\t\t<div class=\"value\" v-bind:class=\"{'disabled': disabled }\">\n\t\t\t<label v-for=\"(o, idx) in options\" :key=\"idx\" :class=\"{ 'active': has(o[field]), 'disabled': o.disabled }\" @click=\"selected(o[field])\">\n\t\t\t\t<span class=\"figure\"></span>\n\t\t\t\t<span class=\"name\">{{ o.name }}</span>\n\t\t\t</label>\n\t\t</div>\n\t\t<div class=\"tip\" v-if=\"tip\">{{ tip }}</div>\n\t</div>",
		mixins: [form_mixin],
		methods: {
			selected: function selected(val) {
				var arr = this.value.split(",");
				var idx = arr.indexOf(val);
				if (idx !== -1) {
					arr.splice(idx, 1);
				} else {
					arr.push(val);
				}
				var val = arr.join(",");
				if (val.indexOf(",") === 0) {
					val = val.substring(1);
				}
				this.$emit("input", val);
			},
			has: function has(val) {
				var arr = this.value.split(",");
				return arr.indexOf(val) !== -1;
			}
		}
	};
	var mm_code = {
		template: "<!-- \u9A8C\u8BC1\u7801 -->\n\t<div class=\"mm_code\">\n\t\t<mm_side v-if=\"icon\">\n\t\t\t<mm_icon :icon=\"icon\"></mm_icon>\n\t\t</mm_side>\n\t\t<mm_main>\n\t\t\t<div class=\"mm_title\" v-if=\"title\">{{ title }}</div>\n\t\t\t<slot>\n\t\t\t\t<mm_group>\n\t\t\t\t\t<input type=\"text\" :value=\"value\" :placeholder=\"desc\" @input=\"$emit('input', $event.target.value)\"></input>\n\t\t\t\t\t<button :class=\"'mm_btn_' + type\" v-html=\"btn\"></button>\n\t\t\t\t</mm_group>\n\t\t\t</slot>\n\t\t</mm_main>\n\t\t<mm_tip v-if=\"tip\" v-html=\"tip\"></mm_tip>\n\t</div>",
		mixins: [form_mixin],
		props: {
			btn: {
				type: String,
				default: "发送验证码"
			}
		},
		computed: {
			ds: function ds() {
				if (this.btn.indexOf("s") == -1) {
					return false;
				} else {
					return true;
				}
			}
		}
	};
	var mm_input = {
		template: "<!-- \u8F93\u5165\u6846 -->\n\t<div class=\"mm_input\">\n\t\t<div class=\"title\" v-if=\"title\" v-html=\"title\"></div>\n\t\t<div class=\"value\" v-bind:class=\"{'disabled': disabled }\">\n\t\t\t<input :type=\"type\" :value=\"value\" :min=\"min\" :max=\"max\" :minlength=\"min_length\" :maxlength=\"max_length\"\n\t\t\t :placeholder=\"desc\" @input=\"set\" :disabled=\"disabled\"/>\n\t\t\t<slot><span class=\"unit\" v-if=\"unit\">{{ unit }}</span></slot>\n\t\t</div>\n\t\t<div class=\"tip\" v-if=\"tip\">{{ tip }}</div>\n\t</div>",
		mixins: [form_mixin],
		methods: {
			set: function set(e) {
				if (this.type === "number") {
					var value = e.target.value ? e.target.value : "0";
					if (value.length > this.max_length && this.max_length !== 0) {
						value = value.substring(0, this.max_length);
					}
					var num = Number(value);
					if (num > this.max && this.max !== 0) {
						num = this.max;
					} else if (num < this.min) {
						num = this.min;
					}
					e.target.value = num.toString();
					this.$emit("input", num);
				} else {
					this.$emit("input", e.target.value);
				}
			}
		}
	};
	var mm_number = {
		template: "<!-- \u6570\u5B57\u6846 -->\n\t<div class=\"mm_number\">\n\t\t<div class=\"title\" v-if=\"title\" v-html=\"title\"></div>\n\t\t<div class=\"value\" v-bind:class=\"{'disabled': disabled }\">\n\t\t\t<mm_btn :type=\"type\" @click.native=\"del\"><span class=\"btn_del\"></span></mm_btn>\n\t\t\t<input type=\"number\" :value=\"value\" :min=\"min\" :max=\"max\" @input=\"set\" @blur=\"setInt\" :disabled=\"disabled\"/>\n\t\t\t<mm_btn :type=\"type\" @click.native=\"add\"><span class=\"btn_add\"></span></mm_btn>\n\t\t</div>\n\t\t<div class=\"tip\" v-if=\"tip\">{{ tip }}</div>\n\t</div>",
		mixins: [form_mixin],
		methods: {
			setInt: function setInt(e) {
				var value = e.target.value ? e.target.value : "0";
				var num = Number(value);
				num = parseInt(num / this.num) * this.num;
				this.call(num);
			},
			add: function add() {
				this.call(this.value + this.num);
			},
			del: function del() {
				this.call(this.value - this.num);
			},
			set: function set(e) {
				var value = e.target.value ? e.target.value : "0";
				var num = Number(value);
				e.target.value = this.call(num);
			},
			call: function call(num) {
				if (num > this.max && this.max !== 0) {
					num = this.max;
				} else if (num < this.min) {
					num = this.min;
				}
				this.$emit("input", num);
				return num;
			}
		}
	};
	var mm_pager = {
		template: "<!-- \u5206\u9875\u5668 -->\n\t<div class=\"mm_pager\">\n\t\t<a href=\"javascript:void(0);\" v-if=\"display == '2'\" class=\"first\" @click=\"first\" v-bind:class=\"{ 'disabled': page == 1 }\">\n\t\t\t<span v-html=\"icons[0]\"></span>\n\t\t</a>\n\t\t<a href=\"javascript:void(0);\" class=\"previous\" @click=\"previous\" v-bind:class=\"{ 'disabled' : page <= 1 }\">\n\t\t\t<span v-html=\"icons[1]\"></span>\n\t\t</a>\n\t\t<a href=\"javascript:void(0);\" v-for=\"(p, i) in pages\" :key=\"i\" v-bind:class=\"{'active': page == p }\" @click=\"set(p)\">{{ p }}</a>\n\t\t<a href=\"javascript:void(0);\" class=\"next\" v-bind:class=\"{ 'disabled': page >= count }\" @click=\"next\">\n\t\t\t<span v-html=\"icons[2]\"></span>\n\t\t</a>\n\t\t<a href=\"javascript:void(0);\" v-if=\"display == '2'\" class=\"last\" v-bind:class=\"{ 'disabled': page == count }\" @click=\"last\">\n\t\t\t<span v-html=\"icons[3]\"></span>\n\t\t</a>\n\t</div>",
		model: {
			prop: "page",
			event: "input"
		},
		props: {
			display: {
				type: String,
				default: "1"
			},
			count: {
				type: Number,
				default: 1
			},
			num: {
				type: Number,
				default: 5
			},
			page: {
				type: Number,
				default: 1
			},
			func: {
				type: Function,
				default: function _default(page) {}
			},
			icons: {
				type: Array,
				default: function _default() {
					return ["<<", "<", ">", ">>"];
				}
			}
		},
		data: function data() {
			return {
				pe: this.page
			};
		},

		computed: {
			ct: function ct() {
				return Math.ceil(this.count);
			},
			pages: function pages() {
				var pe = this.page;
				var arr = [pe];
				var len = this.num;
				var end = this.ct;
				for (var i = 0; i < len; i++) {
					var right = pe + i + 1;
					if (right <= end) {
						arr.push(right);
					}
					var left = pe - i - 1;
					if (left > 0) {
						arr.push(left);
					}
				}
				return arr.splice(0, len).sort(function(a, b) {
					return a - b;
				});
			}
		},
		methods: {
			goTo: function goTo(page) {
				if (this.func) {
					this.func(page);
				}
				this.$emit("input", page);
			},
			first: function first() {
				this.pe = 1;
				this.goTo(this.pe);
			},
			previous: function previous() {
				this.pe = this.page - 1;
				if (this.pe < 1) {
					this.pe = 1;
				};
				this.goTo(this.pe);
			},
			set: function set(p) {
				this.pe = p;
				this.goTo(this.pe);
			},
			next: function next() {
				this.pe = this.page + 1;
				if (this.pe > this.ct) {
					this.pe = this.ct;
				};
				this.goTo(this.pe);
			},
			last: function last() {
				this.pe = this.ct;
				this.goTo(this.pe);
			}
		}
	};
	var mm_radio = {
		template: "<!-- \u5355\u9009\u6846 -->\n\t<div class=\"mm_radio\">\n\t\t<div class=\"title\" v-if=\"title\" v-html=\"title\"></div>\n\t\t<div class=\"value\" v-bind:class=\"{'disabled': disabled }\">\n\t\t\t<label v-for=\"(o, idx) in options\" :key=\"idx\" :class=\"{ 'active': value === o[field] }\" @click=\"$emit('input', $event.target.value)\">\n\t\t\t\t<input type=\"radio\" :name=\"name\" :value=\"o[field]\" />\n\t\t\t\t<span class=\"figure\"></span>\n\t\t\t\t<span class=\"name\">{{ o.name }}</span>\n\t\t\t</label>\n\t\t</div>\n\t\t<div class=\"tip\" v-if=\"tip\">{{ tip }}</div>\n\t</div>",
		mixins: [form_mixin],
		data: function data() {
			var name = this.name;
			if (!name) {
				name = $.md5(Math.random().toString()).substring(0, 8);
			}
			return {
				name: name
			};
		}
	};
	var mm_reverse = {
		template: "<div class=\"mm_reverse\">\n\t\t<div class=\"title\" v-if=\"title\" v-html=\"title\" @click=\"set\"></div>\n\t\t<div class=\"value\" v-bind:class=\"{'disabled': disabled }\">\n\t\t\t<slot>\n\t\t\t\t<div class=\"figure\" v-bind:class=\"{ 'reverse_arrow' : display !== '1' }\" @click=\"set\">\n\t\t\t\t\t<span class=\"up\" v-bind:class=\"{'active': seleted === 0 }\"></span>\n\t\t\t\t\t<span class=\"down\" v-bind:class=\"{'active': seleted === 1 }\"></span>\n\t\t\t\t</div>\n\t\t\t</slot>\n\t\t</div>\n\t\t<div class=\"tip\" v-if=\"tip\">{{ tip }}</div>\n\t</div>",
		mixins: [form_mixin],
		methods: {
			set: function set() {
				var n = this.seleted;
				n += 1;
				var lt = this.options;
				var v = "";
				if (n < lt.length) {
					v = lt[n];
				} else if (n > lt.length) {
					n = 0;
					v = lt[0];
				}
				var val = this.value;
				var has = false;
				for (var i = 0; i < lt.length; i++) {
					var o = lt[i];
					if (val.indexOf(o) !== -1) {
						val = val.replace(o, v);
						has = true;
						val = val.replace(",,", ",");
						break;
					}
				}
				if (!has) {
					val += "," + v;
				}
				if (val.indexOf(",") === 0) {
					val = val.substring(1);
				}
				this.$emit("input", val);
				if (this.func) {
					this.func(val);
				}
			}
		},
		computed: {
			seleted: function seleted() {
				var lt = this.options;
				var val = this.value;
				var seleted = 2;
				for (var i = 0; i < lt.length; i++) {
					var o = lt[i];
					if (val.indexOf(o) !== -1) {
						seleted = i;
						break;
					}
				}
				return seleted;
			}
		}
	};
	var mm_select = {
	  template: "\t<!-- \u9009\u62E9\u6846 -->\n\t<div class=\"mm_select\">\n\t\t<div class=\"title\" v-if=\"title\" v-html=\"title\"></div>\n\t\t<div class=\"value\" v-bind:class=\"{'disabled': disabled }\">\n\t\t\t<select v-if=\"type == 'text'\" :value=\"value\" @change=\"set\" :disabled=\"disabled\">\n\t\t\t\t<option v-for=\"(o, idx) in options\" :key=\"idx\" :value=\"o[field]\">{{ o.name }}</option>\n\t\t\t</select>\n\t\t\t<a href=\"javascript:void(0)\" class=\"click\" v-else-if=\"type === 'click'\" v-bind:class=\"{ 'current': sw }\">\n\t\t\t\t<div :class=\"{'selected': !$slots.default}\" @click=\"sw = !sw\">\n\t\t\t\t\t<slot>\n\t\t\t\t\t\t{{ val_name }}\n\t\t\t\t\t</slot>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mm_box\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li v-for=\"(o, idx) in options\" :key=\"idx\" @click=\"click_fun(o[field]);sw = false\" :class=\"{ 'active': value === o[field] }\">{{ o.name }}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t<a href=\"javascript:void(0)\" v-bind:class=\"type\" v-else>\n\t\t\t\t<div class=\"selected\">\n\t\t\t\t\t<slot>\n\t\t\t\t\t\t{{ val_name }}\n\t\t\t\t\t</slot>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mm_box\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li v-for=\"(o, idx) in options\" :key=\"idx\" @click=\"click_fun(o[field])\" :class=\"{ 'active': value === o[field] }\">{{ o.name }}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t</div>\n\t\t<div class=\"tip\" v-if=\"tip\">{{ tip }}</div>\n\t</div>",
	  mixins: [form_mixin],
	  methods: {
	    set: function set(e) {
	      this.$emit("input", e.target.value);
	    },
	    click_fun: function click_fun(value) {
	      this.$emit("input", value);
	      this.func(value);
	    }
	  },
	  computed: {
	    val_name: function val_name() {
	      var k = this.field;
	      var v = this.value;
	      var lt = this.options;
	      var name = "";
	
	      for (var i = 0; i < lt.length; i++) {
	        var o = lt[i];
	
	        if (o[k] === v) {
	          name = o.name;
	          break;
	        }
	      }
	
	      return name;
	    }
	  }
	};
	var mm_switch = {
		template: "<!-- \u5F00\u5173 -->\n\t<div class=\"mm_switch\">\n\t\t<div class=\"title\" v-if=\"title\" v-html=\"title\"></div>\n\t\t<div class=\"value\" v-bind:class=\"{'disabled': disabled }\">\n\t\t\t<label :class=\"{ 'active': value == 1 }\" @click=\"set\">\n\t\t\t\t<div class=\"onoff\"><span class=\"on\" v-if=\"display == '1'\"></span><span class=\"off\" v-if=\"display == '1'\"></span></div>\n\t\t\t</label>\n\t\t</div>\n\t\t<div class=\"tip\" v-if=\"tip\">{{ tip }}</div>\n\t</div>",
		mixins: [form_mixin],
		methods: {
			set: function set() {
				var val = 0;
				if (this.value === 0) {
					val = 1;
				}
				this.$emit("input", val);
			}
		}
	};
	var mm_nav = {
		template: "<ul class=\"mm_nav\">\n\t\t<li v-for=\"(o, index) in list\" :key=\"index\">\n\t\t\t<a :href=\"o.url\" v-if=\"o.url.indexOf('http:') === 0 || o.url.indexOf('https:') === 0\">\n\t\t\t{{ o.title }}\n\t\t\t<span class=\"message\" v-show=\"o.message > 0\">{{ o.message }}</span></a>\n\t\t\t<router-link :to=\"o.url\" v-else>\n\t\t\t{{ o.title }}\n\t\t\t<span class=\"message\" v-show=\"o.message > 0\">{{ o.message }}</span>\n\t\t\t</router-link>\n\t\t</li>\n\t</ul>",
		props: {
			list: {
				type: Array,
				default: function _default() {
					return [];
				}
			},
			vm: {
				type: Object,
				default: function _default() {
					return {
						icon: "icon",
						title: "title",
						desc: "desc",
						url: "url",
						name: "name",
						tip: "tip"
					};
				}
			}
		}
	};
	return {
		install: function install(Vue, options) {
			Vue.component("mm_icon", mm_icon);
			Vue.component("mm_btn", mm_btn);
			Vue.component("mm_loading", mm_loading);
			Vue.component("mm_body", mm_body);
			Vue.component("mm_col", mm_col);
			Vue.component("mm_foot", mm_foot);
			Vue.component("mm_grid", mm_grid);
			Vue.component("mm_group", mm_group);
			Vue.component("mm_head", mm_head);
			Vue.component("mm_item", mm_item);
			Vue.component("mm_list", mm_list);
			Vue.component("mm_modal", mm_modal);
			Vue.component("mm_movable", mm_movable);
			Vue.component("mm_page", mm_page);
			Vue.component("mm_div", mm_div);
			Vue.component("mm_side", mm_side);
			Vue.component("mm_table", mm_table);
			Vue.component("mm_warp", mm_warp);
			Vue.component("mm_checkbox", mm_checkbox);
			Vue.component("mm_code", mm_code);
			Vue.component("mm_input", mm_input);
			Vue.component("mm_number", mm_number);
			Vue.component("mm_pager", mm_pager);
			Vue.component("mm_radio", mm_radio);
			Vue.component("mm_reverse", mm_reverse);
			Vue.component("mm_select", mm_select);
			Vue.component("mm_switch", mm_switch);
			Vue.component("mm_nav", mm_nav);
		}
	};
});
